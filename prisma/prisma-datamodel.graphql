type Program {
  id: ID! @id
  name: String! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  products: [Product!]!
}

type Product {
  id: ID! @id
  name: String!
  program: Program!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  projects: [Project!]!
}

type Project {
  id: ID! @id
  name: String!
  product: Product!
  status: Boolean @default(value: false)
  sectionLead: Person @relation(link: INLINE, name: "SectionLead")
  teamLead: Person @relation(link: INLINE, name: "TeamLead")
  projectManagers: [Person!]! @relation(name: "ProjectManager")
  team: [Person!]! @relation(name: "Team")
  meetings: [Meeting!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Meeting {
  id: ID! @id
  title: String!
  attendedBy: [Person!]!
  project: Project!
  notes: [Note!]!
}

type Note {
  id: ID! @id
  title: String!
  meeting: Meeting!
  content: String!
  author: Person!
}

enum Role {
  SL
  TL
  WEB
  DS
  UX
  PM
}

type Person {
  id: ID! @id
  name: String!
  email: String! @unique
  role: Role!
  notes: [Note!]!
  meetings: [Meeting!]
  manages: [Project!]! @relation(name: "ProjectManager")
  team: Project @relation(name: "Team")
  sl: [Project!]! @relation(name: "SectionLead")
  tl: Project @relation(name: "TeamLead")
}
